╔══════════════════════════════════════════════════════════════════╗
║                  🚀 DEPLOYMENT QUICK REFERENCE                   ║
╚══════════════════════════════════════════════════════════════════╝

📍 WHERE TO GET YOUR 4 SECRETS
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. DATABASE_URL
   🌐 https://supabase.com
   → Your Project
   → Settings (⚙️)
   → Database
   → Connection string → URI tab
   → Copy and replace [YOUR-PASSWORD] with your actual password

2. SUPABASE_URL  
   🌐 https://supabase.com
   → Your Project
   → Settings (⚙️)
   → API
   → Copy "Project URL"

3. SUPABASE_KEY
   🌐 https://supabase.com
   → Your Project
   → Settings (⚙️)
   → API
   → Copy "anon public" key (NOT service_role!)

4. JWT_SECRET
   💻 PowerShell command:
   node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

⚡ QUICK SETUP (6 STEPS)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. CREATE SUPABASE PROJECT
   → https://supabase.com → New Project
   → Save database password!

2. CREATE TABLES
   → Supabase → SQL Editor
   → Copy schema.sql contents
   → Run

3. CREATE STORAGE BUCKET
   → Supabase → Storage → New Bucket
   → Name: "files"
   → Public: ON
   → Add policy: public INSERT + SELECT

4. CREATE .ENV FILE
   → backend/.env
   → Add all 4 secrets

5. SET UP PASSWORD
   cd d:\DEV\Shari\backend
   node setupPassword.js

6. DEPLOY TO VERCEL
   vercel login
   vercel
   → Add environment variables in Vercel dashboard
   vercel --prod

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

📋 CHECKLIST
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

SUPABASE SETUP
□ Created account
□ Created project
□ Saved database password
□ Got DATABASE_URL
□ Got SUPABASE_URL
□ Got SUPABASE_KEY
□ Ran schema.sql
□ Created "files" bucket
□ Made bucket public
□ Added storage policies

LOCAL SETUP
□ Generated JWT_SECRET
□ Created .env file
□ Added all 4 secrets to .env
□ Ran npm install
□ Ran setupPassword.js

VERCEL DEPLOYMENT
□ Installed Vercel CLI
□ Logged into Vercel
□ Deployed backend
□ Added env vars to Vercel
□ Redeployed with --prod

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🔧 ESSENTIAL COMMANDS
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Generate JWT Secret:
node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"

Set Up Password:
cd d:\DEV\Shari\backend
node setupPassword.js

Deploy Backend:
cd d:\DEV\Shari\backend
vercel --prod

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

⚠️ IMPORTANT NOTES
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

✓ Use "anon public" key, NOT "service_role" key
✓ Replace [YOUR-PASSWORD] in DATABASE_URL
✓ Bucket name must be exactly "files"
✓ Make bucket PUBLIC
✓ JWT_SECRET must be same locally and in Vercel
✓ Never commit .env to Git

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🆘 TROUBLESHOOTING
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

"Cannot connect to database"
→ Check DATABASE_URL has correct password

"Table does not exist"  
→ Run schema.sql in Supabase SQL Editor

"Storage bucket not found"
→ Create "files" bucket, make it public

"Invalid token"
→ Verify JWT_SECRET matches everywhere

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

📚 FULL DOCUMENTATION
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

📘 START_HERE.md      - Complete step-by-step guide
✅ CHECKLIST.md       - Detailed checklist
⚡ COMMANDS.md        - All commands reference
🏗️ ARCHITECTURE.md    - How everything works
📋 DEPLOYMENT_GUIDE.md - Detailed deployment info
📖 README.md          - Documentation index

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

💡 START WITH: START_HERE.md
⏱️  TIME NEEDED: ~30 minutes
🎯 DIFFICULTY: Easy (just follow the steps!)

Good luck! 🚀
